/* --------------------------*/
/* INDEX - UTILITY CLASSES   */
/* --------------------------*/
/*    1. Displays            */
/*    2. Containers          */
/* --------------------------*/

/* 1. Displays */

.flex {
    display: flex;
}

.grid {
    display: grid;
}

.d-block {
    display: block;
}

/* 2 Containers */

.container {
    padding-inline: 2em; /* shorthand property used to set the padding on the left and right sides of an element's content area */
    margin-inline: auto; /* shorthand property used to set the margin on the left and right sides of an element. Because it's set to auto here, it will center the container in the page */
    max-width: 1100px;
    min-height: calc(100vh - 136px);
    margin: auto;
}

.grid-container {
    display: grid;
    text-align: center;
    /*  place-items is a shorthand property used to set both the align-items and justify-items properties simultaneously for all the items inside a grid or flex container. These properties control the alignment of items along the vertical and horizontal axes, respectively. */
    place-items: center;
    padding-inline: 2rem;
}

  /* styles for desktop devices */
  @media (min-width: 992px) {
    /* styles for desktop devices */
  
    .grid-container {
        grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 30rem)) minmax(2rem, 1fr);
        gap: 2rem;
        text-align: left;
    
        & > *:first-child {
            grid-column: 2;
        }
    
        & > *:last-child {
            grid-column: 3;
            
        }
    }

    .home .grid-container {
        padding-bottom: max(6rem, 20vh);
        align-items: end;
    }
  
  }

/* The flow utility class allows us to consistently space the bottom margin of the elements inside a container. In this case all the children of a parent container, in exception of the first child, will have a margin bottom of 1rem */
.flow > *:not(:first-child) {
    margin-top: 1rem;
    outline: 1px solid red;
}